<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[从今天起开始跑步]]></title>
      <url>%2F2017%2F02%2F18%2F%E4%BB%8E%E4%BB%8A%E5%A4%A9%E8%B5%B7%E5%BC%80%E5%A7%8B%E8%B7%91%E6%AD%A5%2F</url>
      <content type="text"><![CDATA[计划跑锻炼已经有很长一段时间了，今天终于下定决心开始跑。首先去Rebel Sport买了一双迄今为止最贵的一双鞋 - Asics Gel-Kayano 22, 当然再买这双鞋子以前已经做过大量的功课，一定买适合自己的跑鞋，在Rebel正好这双鞋子在打折，$159, 原价$270. 晚上试着跑了一下，第一次抛了1.3公里，然后又跑了一圈0.66公里，说实话这双鞋非常带劲，缓冲极好！希望能坚持下去，加油！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo 添加网易悦音乐歌曲和歌单]]></title>
      <url>%2F2017%2F02%2F16%2FHexo-%E6%B7%BB%E5%8A%A0%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E6%AD%8C%E6%9B%B2%E5%92%8C%E6%AD%8C%E5%8D%95%2F</url>
      <content type="text"><![CDATA[单首歌曲https已经不能插入网易云音乐，所以就只能借用 music.daoapp.io 来实现。 在网易云音乐的网页搜索歌曲然后拷贝歌曲ID，例如 天黑黑， id是287749，然后更改成如下， 如果不想让它自动播放，把autoplay设置成0 歌单在网易云音乐的网页搜索歌单然后拷贝歌单ID，然后改成如下，注意把song改成playlist]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[2017最潮的4句实话]]></title>
      <url>%2F2017%2F01%2F28%2F2017%E6%9C%80%E6%BD%AE%E7%9A%844%E5%8F%A5%E5%AE%9E%E8%AF%9D%2F</url>
      <content type="text"><![CDATA[2017最潮的4句实话！（特精辟） 不要炫耀你的钱，在医院那就像纸 不要炫耀你的工作，你倒下了，无数人会比你做的更出色 不要炫耀你的房，你去了，那就是别人的窝 不要炫耀你的车，你离开了，车钥匙就握在别人手里了！ 你唯一可以炫耀的是: 你的健康!!]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Mac OS X Development Tutorial for Beginners Part 1: Intro to Xcode]]></title>
      <url>%2F2017%2F01%2F23%2FMac-OS-X-Development-Tutorial-for-Beginners-Part-1-Intro-to-Xcode%2F</url>
      <content type="text"><![CDATA[Want to learn how to develop your own apps for Mac OS X? Good news – Apple makes developing for OS X incredibly easy – and in this tutorial series we’ll show you how. You’ll learn how to create your first app for OS X – even if you’re a complete beginner. In this first part you’ll first learn about how to obtain the tools you need to develop for OS X. Then, using an app you’ve downloaded as an example, you’ll take a tour of Xcode, discovering how to run an app, edit code, design the UI and debug it. In part two, you’ll take a step back from Xcode to learn about the components that make up an OS X app. From how an app starts, through how the UI is constructed all the way to handling user interaction. You’ll get your hands dirty in the final part – building your first ever OS X app. Starting from nothing, you’ll soon have a simple app up and running on your mac! So what are you waiting for? The world of desktop apps awaits! Note: Here’s some guidance of where to begin with this series: If you are new to Swift, this series assumes Swift knowledge, so first check out our Swift tutorials to get a great introduction. If you already have iOS experience, this first part of the series will be review. Take a quick look through the topics to make sure and then skip straight ahead to the next part of the series. Otherwise, keep reading – this series is for complete beginners – no experience of developing for iOS or OS X is required! PrerequisitesTo become an OS X developer, you will need a few things: Mac running OS X. The OS X operating system only runs on Apple computers, so you need a Mac both to develop and run OS X apps. If you’re wondering which Mac to buy, we recommend a Mac Mini with extra memory and a solid state or Fusion drive; it’s the best balance between cost and power. An AppleID. In order to download the tools from the App Store, you’ll need an AppleID. Xcode. This is the IDE and toolchain used to create OS X apps. You’ll learn how to install this in the next section. Once you’ve built your app, and you want to upload it to the App Store to be distributed, you’ll also need to pay for an Apple developer account. But this is not a requirement until you are ready to send your app out to the world. Obtaining ToolsUnlike some other platforms, developing for OS X requires the installation of one tool – known as Xcode. Xcode is an IDE that includes everything you need to develop iOS, watchOS and OS X apps. If you don’t have Xcode already, click on the Apple icon in the upper left of your menu and select App Store to open the Mac App Store. Search for Xcode and download it: Once it has downloaded and installed, open Xcode from your Applications folder. The first time you open Xcode it’ll ask to install some additional components. Go ahead and let it, entering your password if required. You’ll then be presented with the Xcode welcome screen: Congratulations, you’ve successfully installed Xcode! Read on to learn all about what it can do. Beta versions of XcodeBefore moving on to describing the power of Xcode, it’s worth taking a few minutes learning about beta versions of Xcode. When Apple releases new updates to Xcode (often to support new features in OS X, iOS and watchOS) they go through an agressive cycle of beta releases. These releases include the new features, but consequently many bugs. If you are interested in developing an app which leverages these new features, you’ll need to download the latest beta from Apple. This tutorial requires Xcode 7, since the sample project used in this tutorial has been updated to the Swift 2.0 programming language. There are two cases: If the App Store version of Xcode is Xcode 7 at the time of reading this tutorial, you are all set! If the App Store version of Xcode is Xcode 6 at the time of reading this tutorial, you’ll need to install a beta version of Xcode 7 – keep reading to learn how. To get the latest beta version of Xcode, visit developer.apple.com, click on Resources, Xcode, and then Download. Follow the link to download the latest version of Xcode beta there.Note you can install a beta version of Xcode alongside the stable version, so there’s no problem with continuing work on projects that aren’t ready for upgrade. The download is a DMG, so you can install by dragging the Xcode app across into Applications in the usual way. You’ll then have two versions of Xcode in your applications folder: Run Xcode-beta and then you’re ready to continue on! Hello World! Xcode is an Integrated Development Environment (IDE) which means that it is a collection of all the tools you need, from source code editing, compilation through to debugging and UI design. When you open Xcode it allows you to create a new project, or open an existing one. You can also open an existing project by double clicking on an Xcode project or workspace in Finder: Creating a new appFor most of this tutorial you’ll tour Xcode via a sample app, but first things first – you can’t start learning about a new platform without first creating a “Hello World” app! To do this, select Create a new Xcode project from the Xcode welcome screen: The template chooser allows you to decide how Xcode will configure your new project. In the OS X \ Application section you can see the three different core OS X app types: The three different app types are as follows: Cocoa Application: An OS X desktop app – with a window-based UI. Cocoa is the name of the framework upon which all OS X applications are built. Game: Games built using Apple’s SpriteKit or SceneKit frameworks. Command Line Tool: A utility that runs in a shell, and has a text-based UI. Select Cocoa Application, and click Next. On the screen that follows, set the Product Name to HelloWorld, check the language is set to Swift and that Use Storyboards is checked: Click Next, and choose a location on disk to save your project. This creates a new, empty project ready for you to craft into your amazing app. The first thing you’ll want to do is build and run it to check that it’s all working. Running your appWhether you’ve opened an existing app or created a new one, the most important thing you’ll want to do is to build and run it. This involves compiling all of the code you’ve written into machine code, bundling up the resources required by the app and then executing it. This process is complex, but luckily Xcode has your back. To build and run your project simply press the play button on the toolbar: You can also build and run your app with the ⌘R keyboard shortcut. Note: The first time you ever build and run an app in Xcode, you might well be asked whether you want to Enable Developer Mode on this Mac?. You’re safe to select Enable, at which point you may have to enter your password. Developer mode allows Xcode to attach a debugger to running processes – which will be extremely useful when building your application! Your HelloWorld app is currently looking a bit empty – and doesn’t even say hello! You’re going to fix that now. Adding TextYou’re going to update the user interface (UI) of your app to make it into a true “Hello World” app, and to do this you’re going to use a tool called Interface Builder (IB). You’ll learn much more about Interface Builder later in this tutorial – for now, you just need to know enough to add some text to the layout. Find the Main.storyboard file in the Project Navigator, and click on it: This opens the storyboard file in Interface Builder – you can see an outline of your entire app: The lower component (entitled “View Controller”) represents the visual appearance of your app. You’re going to add a text label to this to create your “Hello World” app. Find the Object Library in the lower right part of the Xcode window. Type label into the search box and locate the Label entry: Drag a label from the Object Library onto the empty View Controller scene canvas: A label represents a static piece of text – with no user interaction – perfect for your Hello World app. You don’t want it to say “label” though – you’re going to update that next. To configure the label, select it and then open the Attributes Inspector (the 4th tab) on the right hand side of the Xcode window. Set the title to “Hello OS X!”, and update the font to be size 40: You may see that the label is no longer sized correctly – next you’ll fix that and set it to the correct position. You position UI elements in OS X using a system called Auto Layout – which allows you to specify positions and sizes of UI elements in terms of their relationships. You want to put your “Hello OS X!” label in the center of the window – so you’re going to add constraints to achieve this. Select the label once again, and click the Align button in the bottom bar (the second from the left). Check both the Horizontally in Container and the Vertically in Container boxes, and ensure that they are both set to 0. Select Items of New Constraints in the Update Frames selection box before finally clicking the Add 2 Constraints button: This will update the storyboard to position and size your label correctly. Build and run your app (either by clicking the play button, or using the ⌘R keyboard shortcut) to see your “Hello World!” Mac OS X app: Introducing HubEventYou’ll continue learning how to make projects from scratch and code OS X apps in later parts of this series, but for the rest of this tutorial you’ll focus on learning more about Xcode itself. To help with that, I’ve created a sample project for you called HubEvent that you’ll work with for the rest of this tutorial. This way you can get a tour of Xcode with a real-world project. Download the HubEvent starter project, unzip it and double click on HubEvent\HubEvent.xcodeproj in Finder to open it in Xcode. Build and run HubEvent sample project and you’ll see it compile and then launch: HubEvent uses the public GitHub API to pull down all the events for a user, and displays a summary of them in a table. As you select each row of the table, the raw JSON associated with that event is displayed in the panel below. Xcode Core FunctionalityHubEvent is a fairly simple app, but is complex enough to demonstrate the core functionality of Xcode. The remainder of this tutorial will cover the following: Code Editor. All OS X apps have a code component, and HubEvent is no different. The code in HubEvent is responsible for downloading the data from the GitHub API, and wiring it up to the user interface. Interface Builder. You’ve already used Interface Builder when you build your “Hello World!” app. You’ll learn more about how this powerful tool allows you to build up the split-window UI used in HubEvent. Asset Catalog. All image assets are stored inside asset catalogs – you’ll discover how to replace the standard app icon with something more interesting. Debugging. Everybody makes mistakes when writing code and building apps and Xocde’s debugger makes identifying and fixing bugs a whole lot easier. Documentation. OS X apps are build on top of some extremely advanced system frameworks, and nobody can remember exactly how to use each and every one of them. Luckily Apple creates high-quality documentation and has integrated it with Xcode to make it easy to find answers to your questions.Code EditorApps are built primarily from code, written in the Swift programming language. You can also use Objective-C to write apps for OS X, but Apple introduced Swift in 2014, and was very clear that it is the langauge of the future. HubEvent is written in Swift. One of the views available in Xcode is the Code Editor, which is activated whenever you open a source code file. To see it, select WindowController.swift from the Controllers group in the Project navigator. Note: You might need to show the Navigator pane on the left hand side using the buttons in the toolbar, and choose the Project navigator within the navigator pane. The buttons are shown in the above screenshot.]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[如何使用aria2下载]]></title>
      <url>%2F2017%2F01%2F19%2F%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8aria2%E4%B8%8B%E8%BD%BD%2F</url>
      <content type="text"><![CDATA[背景介绍Aria2 是一个轻量的多协议多源命令行下载工具，支持 HTTP/HTTPS, FTP, SFTP, BitTorrent and Metalink 等协议下的下载。aria2 可通过内置的 JSON-RPC 及 XML-RPC interfaces 来进行操作，可通过 web 界面管理下载。 12345aria2 is a lightweight multi-protocol &amp; multi-source command-line download utility. It supports HTTP/HTTPS, FTP, SFTP, BitTorrent and Metalink. aria2 can be manipulated via built-in JSON-RPC and XML-RPC interfaces. Aria2 项目官网为 https://aria2.github.io/。aria2 早期是维护在 sourceforge 上的，但目前已转移至 GitHub：https://github.com/aria2/aria2，sourceforge 上提供的下载链接留在较老的版本上。 下载最新版的 aria2 请访问 aria2 GitHub 的 release 页面：https://github.com/aria2/aria2/releases。 命令行模式及配置文件Aria2 有两种下载模式，一种是命令行下载模式，一种是 RPC Server 模式。建议使用 RPC Server 模式，同时配合 webui 来管理和使用。更详细的配置选项等可以参考官方 Aria2 Manual。 配置文件建议使用配置文件的方式管理配置（可以添加 -D 选项以后台运行）： 1aria2c --conf-path=aria2.conf 命令行模式我们可以在命令行中非常简单地调用 aria2 进行多种协议的下载操作。例如：下载网络文件： 1$ aria2c http://example.org/mylinux.iso 下载多个文件： 1$ aria2c http://a/f.iso ftp://b/f.iso 下载时每个host使用两个连接： 1$ aria2c -x2 http://a/f.iso 使用 BitTorrent 协议下载： 1$ aria2c http://example.org/mylinux.torrent 使用磁力链接（Magnet URI）进行下载： 1$ aria2c 'magnet:?xt=urn:btih:248D0A1CD08284299DE78D5C1ED359BB46717D8C' Metalink： 1$ aria2c http://example.org/mylinux.metalink 下载 text 文本文件中的链接： 1$ aria2c -i uris.txt Windows 下 aria2 的使用方式下载 aria2 访问 aria2 的 GitHub release 页面，下拉找到 latest release 的 Downloads 部分，下载 64 位或 32 位的 zip 包： ![] (http://zxjsdp1.qiniudn.com/aria2_github_latest_release.png) 配置 aria2将 zip 包内的文件解压至本地目录，如 C:\Apps\aria2\，并在此目录下新建 4 个纯文本文件： 1234aria2.log （日志，空文件就行）aria2.session （下载历史，空文件就行）aria2.conf （配置文件）HideRunAria2.vbs （隐藏cmd窗口运行用到的） aria2.log此文件为 aria2 运行的日志文件。 aria2.session此文件用于记录和读取下载历史，保证在断电和重启时下载任务不会丢失。如果有时aria2不能启动，可以尝试清空此文件中的内容。 aria2.conf此文件为 aria2 的配置文件。 配置文件中，需要根据当前存放 aria2 的目录的路径，修改若干选项： 12345678910# 下载文件保存路径dir=D:\Downloads\aria2\# 日志文件，如果不需要日志，这一行可去掉，如果需要，路径D:\Program Files\aria2\改为你安装aria2的路径log=C:\Apps\aria2\aria2.log# 这两个是记录和读取下载历史用的，断电和重启时保证下载任务不会丢失# 如果有时aria2不能启动，清空这里面的内容就行了，路径D:\Program Files\aria2\改为你安装aria2的路径input-file=C:\Apps\aria2\aria2.sessionsave-session=C:\Apps\aria2\aria2.session 若没有定制需要，其他选项可使用如下实例配置： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859dir=D:\Downloads\aria2\log=C:\Apps\aria2\aria2.loginput-file=C:\Apps\aria2\aria2.sessionsave-session=C:\Apps\aria2\aria2.sessionsave-session-interval=60force-save=truelog-level=error# see --split optionmax-concurrent-downloads=5continue=truemax-overall-download-limit=0max-overall-upload-limit=50Kmax-upload-limit=20# Http/FTP optionsconnect-timeout=120lowest-speed-limit=10Kmax-connection-per-server=10max-file-not-found=2min-split-size=1Msplit=5check-certificate=falsehttp-no-cache=true# FTP Specific Options# BT/PT Settingbt-enable-lpd=true#bt-max-peers=55follow-torrent=trueenable-dht6=falsebt-seed-unverifiedrpc-save-upload-metadata=truebt-hash-check-seedbt-remove-unselected-filebt-request-peer-speed-limit=100Kseed-ratio=0.0# Metalink Specific Options# RPC Optionsenable-rpc=truepause=falserpc-allow-origin-all=truerpc-listen-all=truerpc-save-upload-metadata=truerpc-secure=false# Advanced Optionsdaemon=truedisable-ipv6=trueenable-mmap=truefile-allocation=fallocmax-download-result=120#no-file-allocation-limit=32Mforce-sequential=trueparameterized-uri=true 若需要指定其他选项，例如 rpc-user 及 rpc-passwd 等，可参考其他的配置文件，例如：使用Aria2下载百度网盘和115的资源。 4.HideRunAria2.vbs 此 vbs 脚本用于无 cmd 窗口运行 aria2c。可点击此文件直接后台启动 aria2 并加载配置，无需每次输入aria2 --conf-path=aria2.conf。 使用文本编辑器打开此文件，编辑内容如下： CreateObject(&quot;WScript.Shell&quot;).Run &quot;C:\Apps\aria2\aria2c.exe --conf-path=aria2.conf&quot;,0 其中，C:\Apps\aria2\aria2c.exe 应替换为你的 aria2c.exe 绝对路径。 若需要开机启动，可将 HideRunAria2.vbs 的快捷方式放置于：C:\Users\用户名\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup。 使用 webui 下载管理界面管理下载的内容我们可以使用 webui-aria2 来通过 RPC 方式管理下载内容。 webui-aria2 项目主页为：https://github.com/ziahamza/webui-aria2。 在 Windows 下有两种使用方式： 访问 http://ziahamza.github.io/webui-aria2/。若本地已成功运行 aria2，则可以直接使用。 访问 webui-aria2 项目 GitHub 页面，clone 至本地，使用浏览器打开 index.html。 如何使用 aria2 下载百度云链接推荐使用 BaiduExporter ，可将百度网盘的下载地址导出到 aria2/aria2-rpc，支持 YAAW。BaiduExporter 支持： Chrome（BaiduExporter for Chrome） Firefox（BaiduExporter@Addons page, BaiduExporter.xpi 文件） Safari（BaiduExporter forSafari） 下载迅雷离线等内容可以尝试在 Greasy Fork 及 Gist 等处寻找其他 yaaw 下载的脚本。例如：ThunderLixianExporter 等。 Mac OS X 下 aria2 的使用方式使用 Aria2GUI在 Mac OS X 下，有一个非常不错的 Aria2 用户界面项目 Aria2GUI，GitHub 链接为：https://github.com/yangshun1029/aria2gui。Aria2GUI 自身集成了 aria2，在下载 dmg 文件并安装后，即可使用，无需进行其他繁琐的配置。并且支持多线程。 Aria2GUI 的最新 release 版本请到 GitHub 的 release 页面下载：https://github.com/yangshun1029/aria2gui/releases。 YAAW-for-Chrome 插件使用 YAAW-for-Chrome 插件，可以接管 Chrome 浏览器的下载到 Aria2GUI。YAAW-for-Chrome 的 GitHub 链接为：https://github.com/acgotaku/YAAW-for-Chrome，Chrome store 的安装链接为：https://chrome.google.com/webstore/detail/yaaw-for-chrome/dennnbdlpgjgbcjfgaohdahloollfgoc。 导出百度网盘的资源在 Mac OS X 下，下载百度云上的资源体验较差，没有类似 Windows 上百度云管家类似的原生客户端，使用浏览器下载速度非常慢。因此可以安装 BaiduExporter，在百度云的下载页面上，将下载链接导出到 Aria2GUI 中下载，将能够得到接近带宽极限的满速体验。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[红烧狮子头]]></title>
      <url>%2F2017%2F01%2F17%2F%E7%BA%A2%E7%83%A7%E7%8B%AE%E5%AD%90%E5%A4%B4%2F</url>
      <content type="text"><![CDATA[##材料 食用油500克 （实耗60克） 酱油2大匙 料酒1大匙 胡椒粉1小匙 猪肉馅500克 油菜50克 胡萝卜25克 香葱1棵 生姜1小块 淀粉适量 ##做法 1.葱、姜洗净切末，油菜洗净，胡萝卜洗净切丝； 2.猪肉馅和葱、姜末、淀粉、胡椒粉、酱油充分拌匀，并摔打至有弹性，做成大小相同的肉丸； 3.烧热半锅油，将肉丸倒入油锅炸至金黄； 4.炒锅内留少许油，略炒油菜及胡萝卜丝，再将炸好的肉丸倒入，并加入酱油、清水、料酒同烧，中火焖煮10 多分钟至熟透，用水淀粉勾芡，淋明油盛盘即可。注意肥瘦适宜，肉香四溢。剁肉馅时要参照“三分肥，七分瘦”的原则。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[在不同电脑上进行Hexo写作与同步]]></title>
      <url>%2F2017%2F01%2F17%2F%E5%9C%A8%E4%B8%8D%E5%90%8C%E7%94%B5%E8%84%91%E4%B8%8A%E8%BF%9B%E8%A1%8CHexo%E5%86%99%E4%BD%9C%E4%B8%8E%E5%90%8C%E6%AD%A5%2F</url>
      <content type="text"><![CDATA[如果你有多台电脑，而且每台电脑你都有可能会写博客。那么这个时候就需要对Hexo进行版本控制了。版本控制的主要目的是方便在不同的电脑维护Hexo及写作。这里利用github的分支来保存hexo框架的相关文件(hexo配置、md、主题等文件)到github page仓库。这里假设已经在github上建好page仓库，也就是”yourname.github.io”名字的仓库，以及在自己电脑上已经搭建好git、hexo、nodejs环境 新建Hexo_Blog分支page仓库的master分支用来存放网站文件的，这是GitHub Page的要求，所以只好新建分支来保存Hexo原始文件，在下图的输入框输入分支名并按回车即完成分支创建。 设置默认分支因为我们写博客更多的是更新这个分支，网站文件所在的master分支则由hexo d命令发布文章的时候进行推送，所以我们将hexo分支&gt;设置为默认分支，这样我们在新的电脑环境下git clone该仓库时，自动切到hexo`分支。按下图进行操作。 站点配置hexo deploy参数1234deploy: type: git repo: https://github.com/pingnz/pingnz.github.io.git branch: master 然后使用部署命令hexo g -d就会自动渲染Markdown文件生成静态文件并部署到yourname.github.io仓库的master分支上，这时再访问http://yourname.github.io 就可以看到博客页面了。此时博客页面是部署保存了，但hexo配置、md、主题等文件还没有保存，在heox目录下使用以下命令将文件推送到hexo分支上 12345git remote add origin https://github.com/pingnz/pingnz.github.io.gitgit add .git commit -m "提交描述" #如果主题是英文，这里就是 git commit -m “change description”git push origin hexo_blog 下面来说说不同环境下的操作 已有环境如果在电脑上已经写过博客，那么可以在已有的工作目录下同步之前写的博客。在你的仓库目录下右键’git bash shell’，起来bash命令行，然后 1git pull 这样你的状态就更新了，之后就是 hexo命令写文章啦。。。写完hexo g -d部署好后，使用 1234git add .git commit -m "提交描述" #如果主题是英文，这里就是 git commit -m “change description”git push origin hexo_blog 推送上去. 新环境到了新的电脑上时，我们需要将项目先下载到本地，然后再进行hexo初始化。 12345git clone https://github.com/pingnz/pingnz.github.io.gitcd yourname.github.ionpm install hexonpm installnpm install hexo-deployer-git –save 之后开始写博客，写好部署好之后，别忘记 git add , ….git push origin hexo…推上去 1234git add .git commit -m "提交描述" #如果主题是英文，这里就是 git commit -m “change description”git push origin hexo_blog]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[史上最全的咳嗽食疗方]]></title>
      <url>%2F2017%2F01%2F16%2F%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%85%A8%E7%9A%84%E5%92%B3%E5%97%BD%E9%A3%9F%E7%96%97%E6%96%B9%2F</url>
      <content type="text"><![CDATA[1.萝卜葱白治风寒咳嗽做法：萝卜1根,葱白6根,生姜15克，用水三碗先将萝卜煮熟，再放葱白、姜，煮成一碗汤，连渣一次服。适用： 宣肺解表,化痰止咳。治风寒咳嗽,痰多泡沫,伴畏寒,身倦酸痛等。 2.红糖姜枣汤治伤风咳嗽做法：红糖30克,鲜姜15克,红枣30克。以水三碗煎至过半，顿服，服后出微汗即愈。适用：驱风散寒。治伤风咳嗽,胃寒刺痛,产后受寒腹泻,恶阴等。 3.芫荽汤平伤风咳嗽做法：芫荽(香菜)30克,饴糖30克,大米100克。先将大米洗净,加水煮汤。取大米汤三汤匙与芫荽,饴糖搅拌后蒸10分钟，趁热一次服,注意避风寒。适用：发汗透表，治伤风感冒引起的咳嗽。 4.白萝卜蜂蜜治风寒咳嗽做法：大白萝卜1个,蜂蜜30克,白胡椒5粒,麻黄2克。将萝卜洗净,切片,放入碗内,倒入蜂蜜及白胡椒,麻黄等共蒸半小时趁热顿服,卧床见汗即愈。适用：发汗散寒,止咳化痰，治风寒咳嗽。 5.蒸贝母甲鱼滋阴补肺做法：川贝母5克,甲鱼1只(约500克),鸡清汤1公斤,葱,姜,花椒,料酒,盐各适量。将甲鱼宰杀,去头及内脏,切块备用。将甲鱼块放蒸盆内,加入贝母、盐、料酒、花椒、葱、姜,上笼蒸1小时许。趁热服食。适用：滋阴清热,润肺止咳,退热。治阴虚咳喘,低热,盗汗等。 6.鲜梨贝母治咳嗽肺痈做法：鲜梨500克,贝母末6克,白糖30克。将梨去皮剖开,去核,把贝母末及白糖填入,合起放在碗内蒸熟。早晚分食。适用：清热化痰,散结解表。用治咳嗽或肺痈,症见胸痛,寒战,咳嗽,发热,口干, 咽燥,痰黄腥臭或脓血痰等。 7.冰糖燕窝粥治肺虚久咳做法：燕窝10克,大米100克,冰糖50克，等大米淘洗干净后放入锅内,加清水三大碗,旺火烧开,改用文火熬煮。将发好纯净的燕窝放入锅中与大米同熬约1小时,加入冰糖溶化后即成。适用：滋阴润肺,止咳化痰，治肺虚久咳及咳喘伤阴。 8.燕窝梨大养肺阴做法：燕窝5克(水浸泡),白梨2个,川贝母10克,冰糖5克。白梨挖去核心,将其他三味同放梨内,盖好扎紧放碗中,隔水炖熟食用。适用：养阴润燥,止咳化痰。治多年痰咳,气短乏力。 9.萝卜胡椒止咳祛痰做法：萝卜1个,白胡椒5粒,生姜3片,陈皮1片。加水共煎30分钟，日饮汤2次。适用：下气消痰，治咳嗽痰多。 10.豆浆饮润肺宁嗽化痰做法： 黄豆浸泡磨汁,煮沸后加冰糖饮用。每日清晨空腹饮1碗。适用：健脾宽中,润燥掐水；清肺止咳,化痰。治疳积瘦弱,肺热咳嗽等。 11.豆腐糖止咳化痰平喘做法：豆腐500克,红糖,白糖各100克。把豆腐当中挖一窝,纳入红,白糖,放入碗内隔水煮30分钟。一次吃完,连服4次。适用：清热,生津,润燥，治咳嗽痰喘。 12.玉米须橘皮治咳嗽做法：玉米须,橘皮各适量，共加水煎,日服2次。适用：止咳化痰。治风寒咳嗽,痰多。 13.萝卜猪肺止咳汤做法：萝卜1个, 猪肺1个,杏仁15克。加水共煮1小时，吃肉饮汤。适用：清热化痰,止咳平喘，治久咳不止,痰多气促。 14.糖水冲鸡蛋补虚止咳做法：白糖50克,鸡蛋1个,鲜姜适量。先将鸡蛋打入碗中,搅匀。白糖加水半碗煮沸,趁热冲蛋,搅和,再倒入已绞取的姜汁,调匀。每日早晚各服1次。适用：补虚损，治久咳不愈。 15.芝麻冰糖水治夜嗽做法：生芝麻15克,冰糖10克。芝麻与冰糖共放碗中,开水冲饮。适用：润肺，生津。治夜嗽不止,咳嗽无痰。 注:芝麻1把,生姜50克,共捣烂煮汁服,亦有上述疗效。 16.香油炒羊肝治久嗽做法：羊肝60克,香油30克,盐少许。将羊肝切片,锅内放入香油至八成热,下羊肝及盐翻炒即成。适用：润肺止咳，治久咳不止。 17.蒸梨蜂蜜治久咳咽干做法：梨1个,蜂蜜50克。先把梨挖去核,将蜂蜜填入,加热蒸熟。每日早晚各吃1个,连吃数日。适用：生津润燥,止咳化痰。治阴虚肺燥之久咳咽干,手足心热等。 18.燕窝银耳治干咳盗汗做法：燕窝10克,银耳15克,冰糖适量。将燕窝先用清水过一遍,再放入热水中浸泡3-4小时,然后去毛绒,再放入热水中泡1小时即成。用瓷罐或盖碗盛入燕窝,银耳,冰糖,隔水炖熟，服食。适用：补虚损,养肺阴,退虚热，治干咳,盗汗或肺阴虚等。 19.蜜枣扒山药治肺虚久咳做法：山药1000克,蜜枣10个,板油丁100克,白糖350克,桂花汁、湿淀粉、熟猪油少许。 (1)山药洗净,放入锅内,加清水淹没山药为度,用旺火煮。待山药较烂时捞起,去皮,用刀剖成6厘米长、3厘米宽的长方形，拍扁。蜜枣一颗两半去核待用。 (2)将大汤碗内涂抹上熟猪油,碗底排上蜜枣再排上一层山药,夹一层糖,板油丁,逐层放至碗口,撒上糖,扣上盖盘。上笼蒸1小时左右,然后取下,翻身入盘。 (3)炒锅上火,滤入盘内汤汁,放清水100克,白糖150克和少许桂花汁烧沸,用水淀粉勾欠,起锅浇在山药上即成。适用：补肾润肺，治肺虚久咳,脾虚腹泻,神疲体倦,四肢无力。久食补肾强身。 20.猪肉杏仁汤治咽痒咳嗽做法： 瘦猪肉50克,杏仁10克,北沙参15克。共煎煮汤饮，日服2次。适用：清肺,化痰,生津，治咳嗽少痰,口渴咽干,咽痒等。 21.花生枣蜜汤止咳化痰做法：花生米,大枣,蜂蜜各30克。用水共煎极烂，饮汤,日服2。适用：止嗽化痰。 22.花生沙参汤治咳嗽少痰做法：花生米,白果,百合,北沙参各25克,冰糖适量。水煎取汁,加冰糖，每日1剂。适用：润肺化痰，治久咳痰少,气短咽干。 23.百合雪梨汤滋阴润肺做法： 百合25克,大雪梨1个,冰糖20克。百合用清水浸泡一夜,次日将百合连同清水一起倒入砂锅内,再加半碗多清水,煮1个半小时,待百合已烂时,加去皮切作块的雪梨和冰糖,再煮30分钟即成。适用：滋阴润肺,宁心止嗽。肺虚久咳者食用,常人食用亦有益肺胃之功。 24.银耳鸭蛋汤滋阴清肺做法：银耳15,冰糖25克,鸭蛋1只。银耳与冰糖共煮,水沸后打入鸭蛋，每日服2次。滋阴清肺,止渴生津。适用：治阴虚肺燥之咳嗽痰少,咽干口渴等症。 25.罗汉果柿饼汤清肺热做法：罗汉果半个,柿饼3个,冰糖30克。加清水两碗半共煮至一碗半,再下冰糖,去渣，1天分3次饮完。适用：清肺热,去痰火,止咳嗽。治小儿百日咳及痰火咳嗽等症。 26.无花果冰糖水治肺热咳嗽做法：无花果30克,冰糖适量。将无花果洗净,加水与冰糖共煮。每日1次,连服3-5天可收显效。适用：祛痰理气,润肺止咳,解毒润肠。治肺热咳嗽,声音嘶哑,咽干喉痛,便秘,痔疮出血等。 27.甘蔗汁治肺虚热咳嗽做法：甘蔗汁,萝卜汁各半杯,野百合100克。先煮烂百合,再和入两汁。睡前服食,每日1次。适用：润肺止咳,生津润燥,宁心安神，治虚热咳嗽,虚弱者病后气管炎最宜。 28.奶汤锅子鱼止咳消肿做法：活鲤鱼1尾、火腿片、玉兰片、香菇片，葱、姜、料酒、盐、醋, “奶汤”(即鸡,鸭肘子和骨头炖的汤)各适量。将鲤鱼去鳞开膛,除去内脏,漂洗干净,切成瓦块形状,与葱,姜一起投入油炒勺颠翻几下,加入料酒,盐等调料。然后加入 “奶汤”,待沸再加适量的火腿片,玉兰片,香菇片等,炖约3分钟盛入火锅内上桌。上桌后将锅下的白酒点燃烧开,佐以姜,醋汁食用。适用：止咳消肿,滋补强身，适于咳嗽,气喘,胸部胀满之患者服食。 29.久食花生米止咳化痰做法：花生米炒或煮熟。每日吃,不间断,痊愈后停用。适用：润肺,化痰。治老年慢性支气管炎。注:有虚火实热症者勿食。 30.荞面蛋清治咳嗽不安做法：荞麦面,鸡蛋清各适量，用鸡蛋清和荞麦面成团，每日几次用力涂擦胸部,有效。适用：清热下气。用治胸满腹胀,咳嗽不安。 31.百合蜜治肺热烦咳做法：新百合200克,蜂蜜适量。用蜜拦百合蒸软，时时含1片,吞液服食。适用：清肺宁神。用治肺脏壅热,烦闷咳嗽。 32.秋梨膏止咳化痰做法：秋梨20个、红枣1000克、鲜藕1500克、鲜姜300克、冰糖400克、蜂蜜适量。适用：先将梨,枣,藕,姜捣烂取汁,加热熬膏,下冰糖溶化后,再以蜜收之。可早晚随意服用。清肺降火,止咳化痰,润燥生津,除烦解渴,消散酒毒,祛病养身，用治虚劳咳嗽,口干津亏,虚烦口渴及酒精中毒等。 33.燕窝参汤益肺止咳做法：燕窝5克,西洋参5克。先将燕窝用清水浸透,摘去羽毛杂物,洗净,晾去水气。同西洋参一起放进烛盅内,注入八成满的开水,加盖,隔水炖3小时以上。饮用。适用:养阴润燥,降火益气，用治肺胃阴虚而致的干咳,咳血,潮热,盗汗等,对心血管病咳喘患者更宜。 34.糖淹橘皮止咳化痰做法：橘皮 ,白糖各适量。鲜橘皮或泡软的干橘皮适量,洗净,切成丝,放入铝锅,加大约桶皮重量一半的白糖,添水没过桶皮为度,大火煮沸后,再改用小火煮至余液将干时。将橘皮盛出放在盘内,待冷,再撤入大约桶皮重量一半的白糖,拌匀食用。适用：润肺,燥湿,化痰,生津，治咳嗽多痰等。 35.蜜饯柚肉平喘化痰做法：鲜柚子500克,蜂蜜250克,白酒适量，将柚肉去核,切块,放在瓶罐中,倒入白酒,封严浸闷一。再倒入铝锅中煮至余液将干时,加入蜂蜜,拌匀即成，待冷,装瓶备用。适用：润肺,止咳,化痰，治咳嗽痰盛或老年咳喘等。 36.蜜饯双仁补肾益肺做法：甜杏仁250克,核桃仁250克,蜂蜜500克。先将甜杏仁炒至黄色(勿焦),放在铝锅中加水煮1小时,再下核桃仁,收汁将干锅时,加入蜂蜜,拌匀,再沸即成，每服3克,日服2次。适用：润肺补肾，经常食用,可治肺肾两虚性久咳,久喘等。 37.猪油蜜膏补虚润肺做法:猪油100克,蜂蜜100克.将上述两味分别用小火煎煮至沸,停火晾温,共混合调匀即成。每次1汤匙,日服2次。适用：润肺止咳,补虚，治肺燥咳嗽。 38.蚕豆花冰糖水治咯血做法：蚕豆花9克,冰糖适量，共加水煎，日服2或3次。适用：具有收敛作用，治咯血。 39.蕹菜白萝卜汁治咯血做法：蕹菜(又称空心菜)全棵带根2棵,白萝卜1个,蜂蜜适量。蕹菜与白萝卜洗净,共捣烂绞汁一杯。用蜂蜜调服。适用：治肺热引起的咯血。 40.芥菜姜汤祛痰止咳做法：鲜芥菜80克,鲜姜10克,盐少许。将芥菜洗净后切成小块,生姜切片,加清水四碗煎至两碗,以食盐调味。每日分2次服,连用3日见效。适用：宣肺止咳,疏风散寒。治风寒咳嗽,伴头痛鼻塞,四肢酸痛等。 咳嗽也分“寒”和“热”中医专家提醒，咳嗽和感冒一样，也要在先分清“寒咳”和“热咳”的基础上辨证治疗，否则吃错了，咳嗽反而会更加厉害。其实，要分清寒咳和热咳并不难。从痰的性状可以区分寒热。寒咳的痰色稀白，呈泡沫状；热咳的痰色黄稠，不易咳出。 不过，早晨第一口痰是黄稠痰，并非就代表热咳。因为晚上睡着后，痰液的分泌渐多，停留于气道的水汽会随呼吸蒸发，结果，早上的痰液尤其是第一口痰，往往就变得特别浓浊。而之后的痰一般不会积聚得太多太稠，故白天的痰才更能反映寒热咳嗽的本质。 寒咳往往是感受风寒所致，多见于冬春两季；夏季吹空调受凉而表现为寒咳的，也不少见。寒咳还会有头痛、鼻塞、流清涕，或伴有怕冷、畏寒、无汗等症状。更重要的一个特点是，夜间咳嗽比白天严重。而热咳往往是感受风热所致，以夏秋较多见。热咳病人表现为咽干疼痛、口渴，常伴有发热、头痛、头晕。 当然，有些病证属于寒热虚实夹杂的，这需要医生的认真辨证。同时，由于抗生素的广泛使用，也给辨证治疗带来了困扰。此外，经抗生素治疗后，仍咳嗽不止者，其寒热属性也会发生改变，多数会由热性向寒性转化，表现出肺气虚寒特点，此时应行温肺化痰治疗，而不能再清热。 原料：桂圆10克，熟地黄40克，红枣(去核)6枚，老鸭1只(约850克)。做法：将冬虫草、熟地黄、红枣洗净；老鸭宰杀后去毛、内脏、头颈及脚，洗净后干水。然后把桂圆、熟地黄、红枣放人鸭腹腔内，置于炖盅里，加开水适量，炖盅加盖，文火隔水炖3小时。调味后即可食用。饮汤吃老鸭肉、桂圆、红枣。功效：滋肾补肺、润燥止咳。常用于肺肾阴虚，症见潮热干咳、咽干口渴、日久不愈者。取生黑芝麻15克(约半汤匙)，冰糖适量，共捣碎，用滚开水冲成半碗汤，早晨空腹服用，3日痊愈，忌吃鱼腥、过咸食物。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Linux ls 命令]]></title>
      <url>%2F2017%2F01%2F16%2FLinux-ls-%E5%91%BD%E4%BB%A4%2F</url>
      <content type="text"><![CDATA[Linux LS123456789101112131415161718192021-a -all 列出所有文件，甚至包括文件名以圆点开头的默认会被隐藏的隐藏文件。-d -directory 通常，如果指定了目录名，ls 命令会列出这个目录中的内容，而不是目录本身。把这个选项与-l 选项结合使用，可以看到所指定目录的详细信息，而不是目录中的内容。-F -classify 这个选项会在每个所列出的名字后面加上一个指示符。例如，如果名字是目录名，则会加上一个’/’ 字符。-h -human-readable 当以长格式列出时，以人们可读的格式，而不是以字节数来显示文件的大小。-l 以长格式显示结果。-r -reverse 以相反的顺序来显示结果。通常，ls 命令的输出结果按照字母升序排列。-S 命令输出结果按照文件大小来排序。-t 按照修改时间来排序。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[糖醋鳊鱼]]></title>
      <url>%2F2017%2F01%2F16%2F%E7%B3%96%E9%86%8B%E9%B3%8A%E9%B1%BC%2F</url>
      <content type="text"><![CDATA[菜谱简介材料鲜鳊鱼，生姜，花椒，葱白，大蒜，料酒，糖，醋，老抽，生抽，水，淀粉 做法１：扁鱼宰杀处理干净后2面划上花刀，撒上适量生姜片、花椒、葱白、料酒腌制10-15分钟； ２：糖、醋、老抽、生抽按照2：1：1：1的比例，加入60-70ml水，搅拌均匀后成为糖醋汁； ３：锅里加入适量油烧热后，放入扁鱼中火2面煎炸成金黄色，捞出沥油； ４：锅里留少许底油，放入姜片、葱白、大蒜爆香，小心倒入糖醋汁； ５：加入适量较稀的水淀粉，拌匀； ６：放入煎炸好的扁鱼，大火烧开，中小火炖10分钟左右，转大火收浓汤汁即可。 小诀窍１：鳊鱼可以用其它鲜鱼代替，鱼要清理干净，鱼肚里黑色黏膜一定要清理掉洗净； ２：糖醋汁的比例可以根据各家口味自由调整，老抽上色，生抽调味但都有咸味，故不用加盐调味； ３：鱼下锅煎炸的时候要擦干鱼身的水份，可以保持鱼皮的完整； ４：操作的最后会大火收汁，所以之前的水淀粉不要过于浓稠，以免下锅受热即成浓汤； ５：让鱼在糖醋汁里稍微炖煮一会，可以使鱼更加入味浓郁。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[The funniest story ever]]></title>
      <url>%2F2017%2F01%2F16%2FThe-funniest-story-ever%2F</url>
      <content type="text"><![CDATA[Hi! I am a ridiculous rose and I will tell you what I like and what I don’t like. I don’t like to wrestle, I don‘t like to carry things and I don’t like to wrench. What I like is writing. But I don‘t have much space so I guess this is the end. No no no it is to early to be the end so I am going to tell you a story about a egg. Once upon a time there was a egg called john. John was a egg. Was he a pencil? No no no he is a egg. Ok. we already know he is a egg. THIS is the story. John went to get some bread but when he went out there was a dragon. So the dragon ate him and john died. No no no it is to early for him to die so john got a block of bread and smacked the dragon in the face! After he went home happily.]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo常用命令]]></title>
      <url>%2F2017%2F01%2F16%2FHexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
      <content type="text"><![CDATA[我们希望对自己的博客进行修改或者需要发布新的文章时，可以按以下前三步进行。 123456789$ hexo clean # 删除已经生成的静态页面$ hexo generate$ hexo deployhexo new "postName" #新建文章hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）hexo deploy #将.deploy目录部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本 命令简写 1234hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy]]></content>
    </entry>

    
  
  
</search>
